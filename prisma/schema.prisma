generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id      String  @id @default(uuid())
  name    String
  src     String? @db.Text
  phone   String  @unique
  credits Int

  upiId    String?
  winnings Int     @default(0)

  answeredQuestions Answers[]
  redeemRequests    RedeemRequests[]
}

model Matches {
  id          String   @id
  team1       String
  team2       String
  date        DateTime
  league      String
  isCompleted Boolean  @default(false)

  questions Questions[]
}

model Questions {
  id       String  @id @default(cuid())
  text     String
  status   String
  answer   String?
  isActive  Boolean? @default(true)

  matchId String
  match   Matches @relation(fields: [matchId], references: [id])

  answers Answers[]
}

model Answers {
  id     String @id @default(cuid())
  answer String

  userId     String
  answeredBy User   @relation(fields: [userId], references: [id])

  questionId String
  answered   Questions @relation(fields: [questionId], references: [id])
}

model RedeemRequests {
  id              String    @id @default(cuid())
  amount          Int
  status          String
  userId          String
  paymentMethod   String?
  paymentDetails  String?
  requestedAt     DateTime  @default(now())
  processedAt     DateTime?
  rejectionReason String?

  // Keep the existing relation to User
  requested User @relation(fields: [userId], references: [id])
}

// Commands for updating database on the basis of schema 
// ( For migration )
// npx prisma migrate dev --name your_migration_name
// npx prisma generate 
// ( Without migration )
// npx prisma db push
// npx prisma generate 
